# Makefile –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –ø—Ä–æ–µ–∫—Ç–∞ Foodgram

.PHONY: help install dev-setup dev-start dev-reset test test-api test-unit \
        docker-build docker-up docker-down clean lint format check-all docs \
        setup full-setup quick-start production create-env load-data \
        clear-test-users

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É
help:
	@echo "üçΩÔ∏è  Makefile –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Foodgram"
	@echo ""
	@echo "üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
	@echo ""
	@echo "üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:"
	@echo "  setup        - üéØ –ü–û–õ–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ü–†–û–ï–ö–¢–ê (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
	@echo "  quick-start  - ‚ö° –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ (–µ—Å–ª–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)"
	@echo "  production   - üè≠ –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ"
	@echo ""
	@echo "üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏:"
	@echo "  create-env   - –°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
	@echo "  load-data    - –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤"
	@echo "  dev-reset    - –°–±—Ä–æ—Å–∏—Ç—å –ë–î –∏ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"
	@echo ""
	@echo "üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:"
	@echo "  install      - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo "  dev-setup    - –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  dev-start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å Django —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo ""
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
	@echo "  test         - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"
	@echo "  test-unit    - –ó–∞–ø—É—Å—Ç–∏—Ç—å unit —Ç–µ—Å—Ç—ã (pytest)"
	@echo "  test-api     - –ó–∞–ø—É—Å—Ç–∏—Ç—å API —Ç–µ—Å—Ç—ã (Newman)"
	@echo "  test-coverage- –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º"
	@echo ""
	@echo "üê≥ Docker:"
	@echo "  docker-build - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã"
	@echo "  docker-up    - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Docker"
	@echo "  docker-down  - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  docker-clear-test-users - –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Newman (Docker)"
	@echo ""
	@echo "üß™ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:"
	@echo "  clear-test-users - –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Newman (–ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä)"
	@echo ""
	@echo "üîß –£—Ç–∏–ª–∏—Ç—ã:"
	@echo "  lint         - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏"
	@echo "  format       - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"
	@echo "  check-all    - –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏"
	@echo "  clean        - –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo "  docs         - –û—Ç–∫—Ä—ã—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é API"

# === –ì–õ–ê–í–ù–´–ï –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ó–ê–ü–£–°–ö–ê ===

setup: create-env install dev-setup load-data
	@echo ""
	@echo "üéâ –ü–†–û–ï–ö–¢ –ü–û–õ–ù–û–°–¢–¨–Æ –ù–ê–°–¢–†–û–ï–ù!"
	@echo ""
	@echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
	@echo "   make quick-start    - –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "   make production     - –¥–ª—è production"
	@echo ""

quick-start: 
	@echo "‚ö° –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞..."
	@if [ ! -f "infra/.env" ]; then echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω infra/.env —Ñ–∞–π–ª. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make create-env"; exit 1; fi
	@echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Django —Å–µ—Ä–≤–µ—Ä..."
	./scripts/dev/start_server.sh

production: create-env docker-build docker-up
	@echo ""
	@echo "üè≠ Production –∑–∞–ø—É—â–µ–Ω!"
	@echo "üìñ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost/api/docs/"
	@echo "üîß –ê–¥–º–∏–Ω–∫–∞: http://localhost/admin/"
	@echo ""

create-env:
	@echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–æ–≤..."
	@if [ ! -f "infra/.env" ]; then \
		cp .env.example infra/.env && \
		echo "‚úÖ –°–æ–∑–¥–∞–Ω infra/.env –∏–∑ .env.example"; \
	else \
		echo "‚ÑπÔ∏è  infra/.env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	fi
	@echo "üîß –ù–∞—Å—Ç—Ä–æ–π—Ç–µ infra/.env –ø–æ–¥ –≤–∞—à–∏ –Ω—É–∂–¥—ã"

load-data:
	@echo "üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤..."
	@cd backend && .venv/bin/python manage.py loaddata ../fixtures/dev/ingredients_fixture.json || \
	cd backend && .venv/bin/python manage.py shell -c "from recipes.models import Ingredient; import json; ingredients = json.load(open('../data/ingredients.json')); [Ingredient.objects.get_or_create(name=i['name'], measurement_unit=i['measurement_unit']) for i in ingredients]; print('‚úÖ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã')"

# === –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ===

install:
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js –¥–ª—è Newman —Ç–µ—Å—Ç–æ–≤..."
	@which node > /dev/null || (echo "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –¥–ª—è Newman —Ç–µ—Å—Ç–æ–≤." && exit 1)
	@echo "üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Newman..."
	npm install
	@echo "üêç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
	./scripts/dev/install_deps.sh
	@echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

dev-setup: install 
	@echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@cd backend && .venv/bin/python manage.py migrate
	@echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)..."
	@cd backend && echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(is_superuser=True).exists() or User.objects.create_superuser('admin', 'admin@example.com', 'admin')" | .venv/bin/python manage.py shell || true
	@echo "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!"

dev-start:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@echo "üìç –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://127.0.0.1:8000/"
	@echo "üîß –ê–¥–º–∏–Ω–∫–∞: http://127.0.0.1:8000/admin/ (admin/admin)"
	@echo "üìñ API docs: http://127.0.0.1:8000/api/docs/"
	./scripts/dev/start_server.sh

dev-reset:
	@echo "üîÑ –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	./scripts/dev/reset_db.sh
	@echo "üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã..."
	@make load-data
	@echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞ –∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!"

# === –ö–æ–º–∞–Ω–¥—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ===

test: test-unit test-api
	@echo "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!"

test-unit:
	@echo "üß™ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
	./scripts/tests/run_pytest.py

test-api:
	@echo "üåê –ó–∞–ø—É—Å–∫ API —Ç–µ—Å—Ç–æ–≤..."
	./scripts/tests/run_newman.sh

test-coverage:
	@echo "üìä –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º..."
	./scripts/tests/run_pytest.py --coverage

# === Docker –∫–æ–º–∞–Ω–¥—ã ===

docker-build:
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
	@if [ ! -f "infra/.env" ]; then echo "‚ùå –°–æ–∑–¥–∞–π—Ç–µ infra/.env —Ñ–∞–π–ª: make create-env"; exit 1; fi
	cd infra && docker compose build --no-cache
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã!"

docker-up:
	@echo "üê≥ –ó–∞–ø—É—Å–∫ –≤ Docker —Ä–µ–∂–∏–º–µ..."
	@if [ ! -f "infra/.env" ]; then echo "‚ùå –°–æ–∑–¥–∞–π—Ç–µ infra/.env —Ñ–∞–π–ª: make create-env"; exit 1; fi
	cd infra && docker compose up -d
	@echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@sleep 10
	@echo "üìä –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
	cd infra && docker compose exec backend python manage.py migrate || true
	@echo "üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ..."
	cd infra && docker compose exec backend python manage.py loaddata fixtures/dev/ingredients_fixture.json || true
	@echo "üë§ –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
	cd infra && docker compose exec backend python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(is_superuser=True).exists() or User.objects.create_superuser('admin', 'admin@example.com', 'admin')" || true
	@echo ""
	@echo "üéâ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!"
	@echo "üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost/"
	@echo "üìñ API docs: http://localhost/api/docs/"
	@echo "üîß –ê–¥–º–∏–Ω–∫–∞: http://localhost/admin/ (admin/admin)"
	@echo ""

docker-down:
	@echo "üê≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	cd infra && docker compose down
	@echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

docker-clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker (volumes, images)..."
	cd infra && docker compose down -v
	docker system prune -f
	@echo "‚úÖ Docker –æ—á–∏—â–µ–Ω!"

docker-restart:
	@echo "üîÑ –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö)..."
	cd infra && docker compose down
	cd infra && docker compose up -d --build
	@echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@sleep 15
	@echo "üìä –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
	cd infra && docker compose exec backend python manage.py migrate || true
	@echo "‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!"

docker-full-restart: docker-clean docker-build docker-up
	@echo "üîÑ –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å –æ—á–∏—Å—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω!"

docker-load-fixtures:
	@echo "üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–∫—Å—Ç—É—Ä –≤ production..."
	cd infra && docker compose exec backend python manage.py loaddata fixtures/dev/ingredients_fixture.json
	@echo "‚úÖ –§–∏–∫—Å—Ç—É—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!"

docker-create-superuser:
	@echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
	cd infra && docker compose exec backend python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(is_superuser=True).exists() or User.objects.create_superuser('admin', 'admin@example.com', 'admin')"
	@echo "‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω (admin/admin)!"

docker-clear-users:
	@echo "üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)..."
	cd infra && docker compose exec backend python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(is_superuser=False).delete(); print('‚úÖ –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã')"

docker-clear-test-users:
	@echo "üß™ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Newman..."
	cd infra && docker compose exec backend python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); usernames_list = ['vasya.ivanov', 'second-user', 'third-user-username', 'NoEmail', 'NoFirstName', 'NoLastName', 'NoPassword', 'TooLongEmail', 'the-username-that-is-150-characters-long-and-should-not-pass-validation-if-the-serializer-is-configured-correctly-otherwise-the-current-test-will-fail-', 'TooLongFirstName', 'TooLongLastName', 'InvalidU\$$ername', 'EmailInUse']; deleted_count, _ = User.objects.filter(username__in=usernames_list).delete(); print(f'‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_count} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')"

docker-clear-recipes:
	@echo "üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤..."
	cd infra && docker compose exec backend python manage.py shell -c "from recipes.models import Recipe; Recipe.objects.all().delete(); print('‚úÖ –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã —É–¥–∞–ª–µ–Ω—ã')"

docker-clear-all-data:
	@echo "üóëÔ∏è –ü–û–õ–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö (–∫—Ä–æ–º–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)..."
	cd infra && docker compose exec backend python manage.py shell -c "from recipes.models import Recipe; from django.contrib.auth import get_user_model; User = get_user_model(); Recipe.objects.all().delete(); User.objects.filter(is_superuser=False).delete(); print('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã')"
	@echo "‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ: –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"

docker-load-test-recipes:
	@echo "üçΩÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ 12 —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤..."
	cd infra && docker compose exec backend python create_test_recipes.py
	@echo "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!"

docker-reset-all-data: docker-clear-all-data docker-load-test-recipes
	@echo "üîÑ –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!"

docker-logs:
	@echo "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Docker..."
	cd infra && docker compose logs -f

# === Docker Hub –∫–æ–º–∞–Ω–¥—ã ===

docker-login:
	@echo "üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Docker Hub..."
	@echo "üë§ –í–≤–µ–¥–∏—Ç–µ username: gdv001"
	@echo "üîê –í–≤–µ–¥–∏—Ç–µ Personal Access Token"
	docker login -u gdv001

docker-push:
	@echo "üì§ –ü—É—à –æ–±—Ä–∞–∑–æ–≤ –≤ Docker Hub..."
	./scripts/docker_push.sh

docker-push-version:
	@echo "üì§ –ü—É—à –æ–±—Ä–∞–∑–æ–≤ —Å –≤–µ—Ä—Å–∏–µ–π –≤ Docker Hub..."
	@read -p "–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä—Å–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, v1.0.0): " version; \
	./scripts/docker_push.sh $$version

docker-publish: docker-build docker-push
	@echo "üöÄ –ü–æ–ª–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Docker Hub –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# === –ö–æ–º–∞–Ω–¥—ã –¥–ª—è production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏–∑ Docker Hub ===

production-deploy: create-env
	@echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ production –∏–∑ Docker Hub..."
	@if [ ! -f "infra/.env" ]; then echo "‚ùå –°–æ–∑–¥–∞–π—Ç–µ infra/.env —Ñ–∞–π–ª: make create-env"; exit 1; fi
	cd infra && docker compose -f docker-compose.production.yml up -d
	@echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@sleep 15
	@echo "üìä –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
	cd infra && docker compose -f docker-compose.production.yml exec backend python manage.py migrate || true
	@echo "üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ..."
	cd infra && docker compose -f docker-compose.production.yml exec backend python manage.py loaddata fixtures/dev/ingredients_fixture.json || true
	cd infra && docker compose -f docker-compose.production.yml exec backend python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(is_superuser=True).exists() or User.objects.create_superuser('admin', 'admin@example.com', 'admin')" || true
	@echo ""
	@echo "üéâ Production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
	@echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost/"
	@echo "üìñ API docs: http://localhost/api/docs/"
	@echo "üîß –ê–¥–º–∏–Ω–∫–∞: http://localhost/admin/ (admin/admin)"
	@echo ""

production-down:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	cd infra && docker compose -f docker-compose.production.yml down

production-logs:
	@echo "üìã –õ–æ–≥–∏ production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	cd infra && docker compose -f docker-compose.production.yml logs -f

production-restart:
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ production..."
	cd infra && docker compose -f docker-compose.production.yml down
	cd infra && docker compose -f docker-compose.production.yml up -d
	@echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@sleep 15
	@echo "üìä –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
	cd infra && docker compose -f docker-compose.production.yml exec backend python manage.py migrate || true
	@echo "‚úÖ Production –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"

# === –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä) ===

clear-test-users:
	@echo "üß™ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Newman (–ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä)..."
	@cd backend && .venv/bin/python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); usernames_list = ['vasya.ivanov', 'second-user', 'third-user-username', 'NoEmail', 'NoFirstName', 'NoLastName', 'NoPassword', 'TooLongEmail', 'the-username-that-is-150-characters-long-and-should-not-pass-validation-if-the-serializer-is-configured-correctly-otherwise-the-current-test-will-fail-', 'TooLongFirstName', 'TooLongLastName', 'InvalidU\$$ername', 'EmailInUse']; deleted_count, _ = User.objects.filter(username__in=usernames_list).delete(); print(f'‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_count} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')"
