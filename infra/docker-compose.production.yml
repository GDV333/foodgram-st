# Production версия с образами из Docker Hub
# Использование: docker-compose -f docker-compose.production.yml up -d

services:
  db:
    container_name: foodgram-db
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=foodgram
      - POSTGRES_USER=foodgram_user
      - POSTGRES_PASSWORD=foodgram_password
    env_file:
      - ./.env
    restart: always
    networks:
      - foodgram-network

  backend:
    container_name: foodgram-backend
    image: gdv001/foodgram-backend:latest
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env
    networks:
      - foodgram-network

  frontend:
    container_name: foodgram-front
    image: gdv001/foodgram-frontend:v1.0.0
    volumes:
      - frontend_build:/app/result_build/
    depends_on:
      - backend
    networks:
      - foodgram-network

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend_build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
      # Для SSL сертификатов (опционально)
      # - ./ssl:/etc/nginx/ssl/
    depends_on:
      - frontend
    restart: always
    networks:
      - foodgram-network

volumes:
  postgres_data:
    driver: local
  static_value:
    driver: local  
  media_value:
    driver: local
  frontend_build:
    driver: local

networks:
  foodgram-network:
    driver: bridge
