services:
  db:
    container_name: foodgram-db
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=foodgram
      - POSTGRES_USER=foodgram_user
      - POSTGRES_PASSWORD=foodgram_password
    env_file:
      - ./.env
    restart: always

  backend:
    container_name: foodgram-backend
    build: ../backend
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - ../fixtures:/app/fixtures/
      - ../backend/create_test_recipes.py:/app/create_test_recipes.py
    depends_on:
      - db
    env_file:
      - ./.env

  frontend:
    container_name: foodgram-front
    build: 
      context: ../frontend
      dockerfile: Dockerfile
    depends_on:
      - backend

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - frontend
    restart: always

volumes:
  postgres_data:
  static_value:
  media_value:
