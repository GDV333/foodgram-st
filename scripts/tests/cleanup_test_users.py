#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ Newman —Ç–µ—Å—Ç–æ–≤.
–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API.
"""

import os
import sys
import django

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
script_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.join(script_dir, '..', '..')
backend_dir = os.path.join(project_root, 'backend')

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é backend
os.chdir(backend_dir)

# –î–æ–±–∞–≤–ª—è–µ–º backend –≤ sys.path
if backend_dir not in sys.path:
    sys.path.insert(0, backend_dir)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'foodgram.settings')

try:
    django.setup()
    from django.contrib.auth import get_user_model
    User = get_user_model()
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django: {e}")
    print("üìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
    print("   - Django —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    print("   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞ –∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞")
    print("   - –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
    sys.exit(1)

# –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ Newman –∫–æ–ª–ª–µ–∫—Ü–∏–∏
# –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
TEST_USERNAMES = [
    'vasya.ivanov',
    'second-user', 
    'third-user-username'
]

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
VALIDATION_TEST_USERNAMES = [
    'NoEmail',
    'NoFirstName', 
    'NoLastName',
    'NoPassword',
    'TooLongEmail',
    'the-username-that-is-150-characters-long-and-should-not-pass-validation-if-the-serializer-is-configured-correctly-otherwise-the-current-test-will-fail-',
    'TooLongFirstName',
    'TooLongLastName',
    'InvalidU$ername',
    'EmailInUse'
]

# –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
ALL_TEST_USERNAMES = TEST_USERNAMES + VALIDATION_TEST_USERNAMES

TEST_EMAILS = [
    'vivanov@yandex.ru',
    'second_user@email.org',
    'third-user@user.ru'
]

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ email'—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
VALIDATION_TEST_EMAILS = [
    'no-username@user.ru',
    'no-first-name@user.ru',
    'no-last-name@user.ru',
    'no-pasword@user.ru',
    'too-long-email@user.ru',
    'too-long-username@user.ru',
    'too-long-firt-name@user.ru',
    'too-long-last-name@user.ru',
    'invalid-username@user.ru',
    'username-in-use@user.ru'
]

# –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ email'—ã
ALL_TEST_EMAILS = TEST_EMAILS + VALIDATION_TEST_EMAILS

def cleanup_test_users():
    """–£–¥–∞–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    deleted_count = 0
    
    print("üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ username
    for username in ALL_TEST_USERNAMES:
        try:
            user = User.objects.get(username=username)
            user_id = user.id
            user.delete()
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} (ID: {user_id})")
            deleted_count += 1
        except User.DoesNotExist:
            print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º –ø–æ email (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ username –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω)
    for email in ALL_TEST_EMAILS:
        try:
            user = User.objects.get(email=email)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω
            if user.username not in ALL_TEST_USERNAMES:
                user_id = user.id
                username = user.username
                user.delete()
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} (email: {email}, ID: {user_id})")
                deleted_count += 1
        except User.DoesNotExist:
            continue
    
    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ (–Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–æ–∫ –≤ —Ç–µ—Å—Ç–∞—Ö)
    test_patterns = ['test', 'newman', 'api_test']
    for pattern in test_patterns:
        test_users = User.objects.filter(username__icontains=pattern)
        for user in test_users:
            if user.username not in ALL_TEST_USERNAMES:  # –ò–∑–±–µ–≥–∞–µ–º –¥–≤–æ–π–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                user_id = user.id
                username = user.username
                user.delete()
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} (ID: {user_id})")
                deleted_count += 1
    
    if deleted_count > 0:
        print(f"üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–¥–∞–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {deleted_count}")
    else:
        print("‚ÑπÔ∏è –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω—ã")
    
    return deleted_count


if __name__ == '__main__':
    try:
        cleanup_test_users()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        sys.exit(1)
